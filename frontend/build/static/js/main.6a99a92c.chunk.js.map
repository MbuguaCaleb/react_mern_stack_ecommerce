{"version":3,"sources":["constants/productConstants.js","constants/userConstants.js","constants/cartConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","actions/productActions.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LogInScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckOutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productCreate","state","product","action","type","loading","success","payload","error","productList","products","pages","page","productDetails","reviews","productUpdate","productTopRated","productReviewCreate","productDelete","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogIn","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderList","orders","orderListMy","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyWord","setKeyWord","Form","onSubmit","e","preventDefault","trim","console","log","push","className","Control","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","listProducts","pageNumber","listProductDetails","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","keyword","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LogInScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckOutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","upLoading","setUpLoading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","OrderListScreen","App","path","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6a99a92c.chunk.js","sourcesContent":["//action types can be represented with constants as below\r\n//because they will not change at any point, it is good preactice\r\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension' //Helps me track my redux state from chrome extension\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport {\r\n  userLogInReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\n//Undestanding combine reducer is very important because this is where i combine all my global states\r\n//Always note the Key\r\nconst reducer = combineReducers({\r\n  productCreate: productCreateReducer,\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productDelete: productDeleteReducer,\r\n  cart: cartReducer,\r\n  userLogIn: userLogInReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderList: orderListReducer,\r\n  orderListMy: orderListMyReducer,\r\n})\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\n//cheking to see if we have User Info from LocalStorage\r\n//Otherwise return Null\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod')\r\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\r\n  : {}\r\n//this sets my Initial State\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromLocalStorage,\r\n    shippingAddress: shippingAddressFromLocalStorage,\r\n    paymentMethod: paymentMethodFromLocalStorage,\r\n  },\r\n  userLogIn: { userInfo: userInfoFromLocalStorage },\r\n}\r\n\r\n//i may have more than one middleware\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_DETAILS_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...{ state } }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_DETAILS_RESET:\r\n      return { product: { reviews: [] } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true, ...{ state } }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true, ...{ state } }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true, ...{ state } }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      //we have to check if an item already exists in the Cart so as not to add it twice\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        //Map is returning an update of my Item\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLogInReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//It is best when the redcers just return the final State.\r\n//Any Logic should be handled by actions, which then pass the end results to the reducers\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userDetails: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        users: action.payload,\r\n      }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return {\r\n        orders: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    //Setting up my headers.\r\n    //Where i will also set my Token\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    //setting the UserLogin details in localStorage\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  //remove the user from LocalStorage\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    //Setting up my headers.\r\n    //Where i will also set my Token\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    //setting the UserLogin details in localStorage\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n    //Setting up my headers.\r\n    //Where i will also set my Token\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n//I need getState because i am using a Token\r\n//We are passing in a whole user object into this function\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n    //Setting up my headers.\r\n    //Where i will also set my Token\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n    //Setting up my headers.\r\n    //Where i will also set my Token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    //Setting up my headers.\r\n    //Where i will also set my Token\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    //Setting up my headers.\r\n    //Where i will also set my Token\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    //intead of having a whole new data Object returned after the response after Updating\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyWord, setKeyWord] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    //trim removes the White Spaces\r\n    if (keyWord.trim()) {\r\n      console.log('keyword')\r\n      history.push(`/search/${keyWord}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Form onSubmit={submitHandler} className='d-flex'>\r\n        <Form.Control\r\n          type='text'\r\n          name='q'\r\n          onChange={(e) => setKeyWord(e.target.value)}\r\n          placeholder='Search Products ....'\r\n          className='mr-sm-2 ml-sm-5'\r\n        ></Form.Control>\r\n        <Button type='submit' variant='outline-success' className='p-2'>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogIn = useSelector((state) => state.userLogIn)\r\n  const { userInfo } = userLogIn\r\n\r\n  const logOutHandler = () => {\r\n    console.log('logOut')\r\n    dispatch(logout())\r\n  }\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>CalebShop</Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logOutHandler}>\r\n                    LogOut\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i>Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='admin.menu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; mbuguacaleb</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#048275',\r\n}\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from '../components/Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n\r\n          <Card.Text as='div'>\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n            />\r\n          </Card.Text>\r\n\r\n          <Card.Text as='h3'>${product.price}</Card.Text>\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\n//setting a default prop\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import axios from 'axios'\r\n\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n//action creators\r\n//remember action creators fire actions\r\n//now wonder there is a function inside a function\r\n//redux thunk helps in this\r\n//instead of getting products from the component, we are going to get products from this action\r\nexport const listProducts =\r\n  (keyWord = '', pageNumber = '') =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_LIST_REQUEST,\r\n      })\r\n\r\n      //This data will include products, pageNumber and the Page\r\n      const { data } = await axios.get(\r\n        `/api/products?keyWord=${keyWord}&pageNumber=${pageNumber}`\r\n      )\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n//I can have one function then return the dispatch inside\r\n//or i may use the above approach\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_REQUEST,\r\n    })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    //A Get request does not need to have a contentType\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    //A Get request does not need to have a contentType\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    //A Get request does not need to have a contentType\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n//review is an Object that will have the Rating and the Comment\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      })\r\n\r\n      //get Token\r\n      const {\r\n        userLogIn: { userInfo },\r\n      } = getState()\r\n\r\n      //A Get request does not need to have a contentType\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_TOP_REQUEST,\r\n    })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyWord = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyWord\r\n                  ? `/search/${keyWord}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>{product.name}</h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome to CalebShop',\r\n  description: 'We sell the best content for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electronics',\r\n}\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  //getting the search property\r\n  const keyWord = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //getting the list of products from the redux store\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  useEffect(() => {\r\n    //dispatching fetch products action\r\n    dispatch(listProducts(keyWord, pageNumber))\r\n  }, [dispatch, keyWord, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyWord ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => {\r\n              return (\r\n                <Col sm={12} md={6} lg={4} xl={3} key={product._id}>\r\n                  <Product product={product} />\r\n                </Col>\r\n              )\r\n            })}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyWord={keyWord ? keyWord : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\nimport Meta from '../components/Meta'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  //The initial Value of MyState depends on what i am setting\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const { error: errorProductReview, success: successProductReview } =\r\n    productReviewCreate\r\n\r\n  //Only a user who is logged in can make a review\r\n  const userLogIn = useSelector((state) => state.userLogIn)\r\n  const { userInfo } = userLogIn\r\n\r\n  //i want use effect to run everytime dispatch is instantiated\r\n  //this is when the component loads\r\n\r\n  //It is also running when the match changes\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      //Resetting the State and fetch action once the Product review is successful\r\n      //remember the State will have been set so i must reset for the purpose of the Next action\r\n      alert('Review Submitted')\r\n      //because i am not redirecting i must reset myState\r\n      //if the State value was lost at re-render, then it would not be helpful\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  //custom handlers\r\n  //below the built in react hooks\r\n  const addToCartHandler = () => {\r\n    //go to the Cart Page but also carry along my Parameters\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  //I must have a preventDefault on Submit\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id, { rating, comment }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n              <h3>{product.name}</h3>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  ></Rating>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price:${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description:{product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong> ${product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      <strong>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className='btn-block'\r\n                    type='button'\r\n                    disabled={product.countInStock === 0}\r\n                  >\r\n                    Add to Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => {\r\n                  return (\r\n                    <ListGroup.Item key={review._id}>\r\n                      <strong>{review.name}</strong>\r\n                      <Rating value={review.rating}></Rating>\r\n                      <p>{review.createdAt.substring(0, 10)}</p>\r\n                      <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  )\r\n                })}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating' className='pb-3'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => {\r\n                            setRating(e.target.value)\r\n                          }}\r\n                        >\r\n                          <option value=''>Select .....</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment' className='pb-3'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          value={comment}\r\n                          onChange={(e) => {\r\n                            setComment(e.target.value)\r\n                          }}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>Sign In</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n//getState is a store method\r\n\r\n//Returns the current state tree of your application. It is equal to the last value returned by the store's reducer.\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  //i am getting my current State after dispatch as i am saving it into localStorage\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  //after i remove the item from dispatch\r\n  //I must set my Local Storage to the new Value\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  //after i remove the item from dispatch\r\n  //I must set my Local Storage to the new Value\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  console.log(data)\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n//When i Load this Page i want to have added my Item into the Cart\r\nfunction CartScreen({ match, location, history }) {\r\n  //extracting the ID and the Quantity\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n  //getting my cart items from store so that i loop through them\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    //i only want to dispatch when there is a product Id\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  //custom methods\r\n  const removeFromCartHandler = (id) => {\r\n    console.log('REMOVE')\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkOutHandler = () => {\r\n    //redirect to login unless it has a query set set to shipping\r\n    //if the user has not logged in, it redirects to Logging in\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => {\r\n                        removeFromCartHandler(item.product)\r\n                      }}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkOutHandler}\r\n              >\r\n                Proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LogInScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //Getting the Response after dispatch\r\n  //beauty of this is that my login state is shared across my components\r\n  const userLogIn = useSelector((state) => state.userLogIn)\r\n  const { loading, error, userInfo } = userLogIn\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    //redirect if user is logged In\r\n    //very important piece of code\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    //Dispatch LogIn\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email' className='pb-3'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password' className='pb-3'>\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter Password'\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LogInScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //Getting the Response after dispatch\r\n  //beauty of this is that my login state is shared across my components\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    //redirect if user is logged In\r\n    //very important piece of code\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      //Dispatch Register\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name' className='pb-3'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Name'\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email' className='pb-3'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password' className='pb-3'>\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter Password'\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirm_password' className='pb-3'>\r\n          <Form.Label>Confirm Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            value={confirmPassword}\r\n            onChange={(e) => {\r\n              setConfirmPassword(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Log In\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  //Is used to ensure that the User Must be logged In\r\n  const userLogIn = useSelector((state) => state.userLogIn)\r\n  const { userInfo } = userLogIn\r\n\r\n  //Very Important bacause of the communication am dispaying after sucess\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  //Anything that will change its status later thrus triggering a rerender should be\r\n  //placed into useEffect\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user.name) {\r\n        //It the User has not Loaded Yet, I dispatch\r\n        //Else i set the Form Fields from my Loaded State\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        //Setting the State after Loading\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  //this is a form event\r\n  //Therefore i must prevent the default behaviour\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      //Dispatch Update Profile\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name' className='pb-3'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter Name'\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value)\r\n              }}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email' className='pb-3'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value)\r\n              }}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='password' className='pb-3'>\r\n            <Form.Label>Password </Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter Password'\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value)\r\n              }}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirm_password' className='pb-3'>\r\n            <Form.Label>Confirm Password </Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              value={confirmPassword}\r\n              onChange={(e) => {\r\n                setConfirmPassword(e.target.value)\r\n              }}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'></Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => {\r\n                return (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className='fas fa-times'\r\n                          style={{ color: 'red' }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className='fas fa-times'\r\n                          style={{ color: 'red' }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button className='btn-sm' variant='light'>\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\n//Order is an Object being passed inside\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    //A Get request does not need to have a contentType\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n//Payment Result comes from PAYPAL\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      })\r\n\r\n      //get Token\r\n      const {\r\n        userLogIn: { userInfo },\r\n      } = getState()\r\n\r\n      //A Get request does not need to have a contentType\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      //Paypals response is the one i am passing into my request\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      )\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    //A Get request does not need to have a contentType\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    //When not sending a Payload using the Put and Post Request\r\n    //It is good to use an empty Object as a Parameter\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    //A Get request does not need to have a contentType\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    //get Token\r\n    const {\r\n      userLogIn: { userInfo },\r\n    } = getState()\r\n\r\n    //A Get request does not need to have a contentType\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckOutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-contant-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckOutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckOutSteps from '../components/CheckOutSteps'\r\n\r\nfunction ShippingScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //setting values from my LocalStoage/State as initial Values\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    //redurect to payments Page\r\n    history.push('/payment')\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <CheckOutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address' className='pb-3'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='address'\r\n            placeholder='Enter Address'\r\n            required\r\n            value={address}\r\n            onChange={(e) => {\r\n              setAddress(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='city' className='pb-3'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='city'\r\n            placeholder='Enter City'\r\n            value={city}\r\n            required\r\n            onChange={(e) => {\r\n              setCity(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='postalCode' className='pb-3'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='postalCode'\r\n            placeholder='Enter Postal Code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => {\r\n              setPostalCode(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='Country' className='pb-3'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='country'\r\n            placeholder='Enter Country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => {\r\n              setCountry(e.target.value)\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckOutSteps from '../components/CheckOutSteps'\r\n\r\nfunction PaymentScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  //We want to redirect if there is no shippingAddress\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <CheckOutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => {\r\n                setPaymentMethod(e.target.value)\r\n              }}\r\n            ></Form.Check>\r\n\r\n            <Form.Check\r\n              type='radio'\r\n              label='Mpesa'\r\n              id='Mpesa'\r\n              name='paymentMethod'\r\n              value='Mpesa'\r\n              onChange={(e) => {\r\n                setPaymentMethod(e.target.value)\r\n              }}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport CheckOutSteps from '../components/CheckOutSteps'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  //remember i am making an Order.\r\n  //The first thing is to get Items in My Cart\r\n  const cart = useSelector((state) => state.cart)\r\n  const dispatch = useDispatch()\r\n\r\n  //Utility function to add decimals\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  //Calculate Prices\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  //grabbing my orderCreate State\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckOutSteps step1 step2 step3 step4></CheckOutSteps>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address},{cart.shippingAddress.city}\r\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method:</strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => {\r\n                    return (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} * {item.price} = $\r\n                            {(item.qty * item.price).toFixed(2)}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    )\r\n                  })}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  //match  comes from react router and is used to get Parameters\r\n  //it contains information about my URL\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogIn = useSelector((state) => state.userLogIn)\r\n  const { userInfo } = userLogIn\r\n\r\n  //grabbing my orderCreate State\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  //after dispatching the payOrder\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n\r\n  //change the keys to loadingPay and successPay\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  //delivered Order State\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  //Make sure order is Loaded\r\n  if (order) {\r\n    //Utility function to add decimals\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    //Calculate Prices\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n\r\n    order.shippingPrice = addDecimals(order.itemsPrice > 100 ? 0 : 100)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n\r\n      //creating a Paypal Script\r\n      const script = document.createElement('script')\r\n\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    //will load both when there is no Order\r\n    //Or when there is a successful payment\r\n    if (!order || successPay || order._id !== orderId || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order, successDeliver])\r\n\r\n  //payment result comes from PayPal\r\n  const successPaymentMethod = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  //deliver action by admin\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name:</strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}\r\n                {order.shippingAddress.postalCode},\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => {\r\n                    return (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} * {item.price} = $\r\n                            {(item.qty * item.price).toFixed(2)}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    )\r\n                  })}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n            {!order.isPaid && (\r\n              <ListGroup.Item>\r\n                {loadingPay && <Loader />}\r\n                {!sdkReady ? (\r\n                  <Loader />\r\n                ) : (\r\n                  <PayPalButton\r\n                    amount={order.totalPrice}\r\n                    onSuccess={successPaymentMethod}\r\n                  ></PayPalButton>\r\n                )}\r\n              </ListGroup.Item>\r\n            )}\r\n            {loadingDeliver && <Loader />}\r\n            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn btn-block'\r\n                  onClick={deliverHandler}\r\n                >\r\n                  Mark as Delivered\r\n                </Button>\r\n              </ListGroup.Item>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n  const dispatch = useDispatch()\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  //USER LOGIN  State\r\n  const userLogIn = useSelector((state) => state.userLogIn)\r\n  const { userInfo } = userLogIn\r\n\r\n  //get successful deletion State\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    //Only dispatch when the User is an admin\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      //if i am not an admin\r\n      //if i am not logged in\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {users.map((user) => {\r\n              return (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.name}`}> {user.email}</a>\r\n                  </td>\r\n                  <td>\r\n                    {user.isAdmin ? (\r\n                      <i\r\n                        className='fas fa-check'\r\n                        style={{ color: 'green' }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(user._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      //this will help me do the next Update\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, user, userId, successUpdate, history])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name' className='pb-3'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Name'\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value)\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email' className='pb-3'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value)\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='isAdmin' className='pb-3'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => {\r\n                  setIsAdmin(e.target.checked)\r\n                }}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport Paginate from '../components/Paginate'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  //USER LOGIN  State\r\n  const userLogIn = useSelector((state) => state.userLogIn)\r\n  const { userInfo } = userLogIn\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const createProductHandler = () => {\r\n    //create product\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i>Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>Price</th>\r\n                <th>Category</th>\r\n                <th>Brand</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {products.map((product) => {\r\n                return (\r\n                  <tr key={product._id}>\r\n                    <td>{product._id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>${product.price}</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.brand}</td>\r\n\r\n                    <td>\r\n                      <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                          <i className='fas fa-edit'></i>\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      <Button\r\n                        variant='danger'\r\n                        className='btn-sm'\r\n                        onClick={() => deleteHandler(product._id)}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport {\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_DETAILS_RESET,\r\n} from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [upLoading, setUpLoading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  //Getting from the State Once the Product has been Updated\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      dispatch({ type: PRODUCT_DETAILS_RESET })\r\n\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      //There may be a Product in my State\r\n      //The second check is very Important\r\n      if (!product || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    e.preventDefault()\r\n    //getting the Uploaded file\r\n    //We get an array but since we are Only getting the first Image , we use [0]\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUpLoading(true)\r\n\r\n    try {\r\n      //The content Type when Uploading an Image is very Important\r\n      //It must be multipart /form-data\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n      setImage(data)\r\n      setUpLoading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUpLoading(false)\r\n    }\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    //Update Product\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name' className='pb-3'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Name'\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value)\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='price' className='pb-3'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value)\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='image' className='pb-3'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Image Url'\r\n                value={image}\r\n                onChange={(e) => {\r\n                  setImage(e.target.value)\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='image-file' className='pb-3'>\r\n              <Form.Control\r\n                type='file'\r\n                label='choose file'\r\n                onChange={uploadFileHandler}\r\n              ></Form.Control>\r\n              {upLoading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand' className='pb-3'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => {\r\n                  setBrand(e.target.value)\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='CountInStock' className='pb-3'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => {\r\n                  setCountInStock(e.target.value)\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='category' className='pb-3'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Category'\r\n                value={category}\r\n                onChange={(e) => {\r\n                  setCategory(e.target.value)\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='description' className='pb-3'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Description'\r\n                value={description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value)\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n  const dispatch = useDispatch()\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  //USER LOGIN  State\r\n  const userLogIn = useSelector((state) => state.userLogIn)\r\n  const { userInfo } = userLogIn\r\n\r\n  useEffect(() => {\r\n    //Only dispatch when the User is an admin\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      //if i am not an admin\r\n      //if i am not logged in\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {orders.map((order) => {\r\n              return (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.user && order.user.name}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { Container } from 'react-bootstrap'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LogInScreen from './screens/LogInScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/login' component={LogInScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id?' component={OrderScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          {/* Intelligently i am passing in routes, which load the necessary params to the Home Page */}\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css'\nimport App from './App'\nimport './bootstrap.min.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}